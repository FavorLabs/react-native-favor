// Objective-C API for talking to github.com/FavorLabs/favorX/mobile Go package.
//   gobind -lang=objc github.com/FavorLabs/favorX/mobile
//
// File is generated by gobind. Do not edit.

#ifndef __Mobile_H__
#define __Mobile_H__

@import Foundation;
#include "ref.h"
#include "Universe.objc.h"


@class MobileNode;
@class MobileOptions;

@interface MobileNode : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nullable instancetype)init:(MobileOptions* _Nullable)o;
- (BOOL)stop:(NSError* _Nullable* _Nullable)error;
@end

/**
 * Options represents the collection of configuration values to fine tune the
node embedded into a mobile process. The available values are a subset of the
entire API provided by node to reduce the maintenance surface and dev
complexity.
 */
@interface MobileOptions : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
/**
 * api setting
 */
@property (nonatomic) BOOL enableTLS;
@property (nonatomic) long apiPort;
@property (nonatomic) long debugAPIPort;
@property (nonatomic) BOOL enableDebugAPI;
/**
 * vpn setting
 */
@property (nonatomic) BOOL vpnEnable;
@property (nonatomic) long vpnPort;
/**
 * proxy setting
 */
@property (nonatomic) BOOL proxyEnable;
@property (nonatomic) NSString* _Nonnull proxyGroupName;
@property (nonatomic) long proxyPort;
/**
 * group setting json
 */
@property (nonatomic) NSString* _Nonnull group;
/**
 * rpc setting
 */
@property (nonatomic) long websocketPort;
/**
 * p2p setup
 */
@property (nonatomic) int64_t networkID;
@property (nonatomic) long p2PPort;
@property (nonatomic) NSString* _Nonnull welcomeMessage;
/**
 * kademlia
 */
@property (nonatomic) long binMaxPeers;
@property (nonatomic) long lightMaxPeers;
/**
 * cache size
 */
@property (nonatomic) int64_t cacheCapacity;
/**
 * node bootstrap
 */
@property (nonatomic) NSString* _Nonnull bootNodes;
@property (nonatomic) BOOL enableDevNode;
@property (nonatomic) BOOL enableFullNode;
/**
 * chain setting
 */
@property (nonatomic) NSString* _Nonnull chainEndpoint;
@property (nonatomic) NSString* _Nonnull oracleContract;
/**
 * traffic stat
 */
@property (nonatomic) BOOL enableFlowStat;
@property (nonatomic) NSString* _Nonnull flowContract;
/**
 * domain resolver
 */
@property (nonatomic) NSString* _Nonnull resolverOptions;
/**
 * security
 */
@property (nonatomic) NSString* _Nonnull password;
@property (nonatomic) NSString* _Nonnull dataPath;
/**
 * leveldb opts
 */
@property (nonatomic) int64_t blockCacheCapacity;
@property (nonatomic) int64_t openFilesLimit;
@property (nonatomic) int64_t writeBufferSize;
@property (nonatomic) BOOL disableSeeksCompaction;
/**
 * misc
 */
@property (nonatomic) NSString* _Nonnull verbosity;
// skipped method Options.APIAddr with unsupported parameter or return types

// skipped method Options.Bootnodes with unsupported parameter or return types

// skipped method Options.DataDir with unsupported parameter or return types

// skipped method Options.DebugAPIAddr with unsupported parameter or return types

// skipped method Options.EnableApiTLS with unsupported parameter or return types

// skipped method Options.Groups with unsupported parameter or return types

// skipped method Options.IsDev with unsupported parameter or return types

// skipped method Options.KadBinMaxPeers with unsupported parameter or return types

// skipped method Options.LightNodeMaxPeers with unsupported parameter or return types

// skipped method Options.OracleContractAddress with unsupported parameter or return types

// skipped method Options.ProxyAddr with unsupported parameter or return types

// skipped method Options.ProxyGroup with unsupported parameter or return types

// skipped method Options.ResolverConnectionCfgs with unsupported parameter or return types

// skipped method Options.TrafficContractAddr with unsupported parameter or return types

// skipped method Options.TrafficEnable with unsupported parameter or return types

// skipped method Options.VpnAddr with unsupported parameter or return types

// skipped method Options.WSAddr with unsupported parameter or return types

@end

FOUNDATION_EXPORT MobileNode* _Nullable MobileNewNode(MobileOptions* _Nullable o, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSString* _Nonnull MobileVersion(void);

#endif
